/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/common/dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./branches/cloud-collect/common/proxy/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./branches/cloud-collect/common/js/lib/dom/isNode.js":
/*!************************************************************!*\
  !*** ./branches/cloud-collect/common/js/lib/dom/isNode.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * 判断对象是否为一个节点，注意：元素、注释、文本内容都是一个node，具体请查阅DOM实现接口文档\n * 例子：\n *\n * HTML: <div id=\"node\"></div>\n *\n * var isNode = require(\"../dom/isNode\");\n * var node = document.getElementById(\"node\");\n * console.log(isNode(node)); // true\n *\n */\nmodule.exports = function (node) {\n  return node != undefined && node != null && Boolean(node.nodeName) && Boolean(node.nodeType);\n};\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/js/lib/dom/isNode.js?");

/***/ }),

/***/ "./branches/cloud-collect/common/js/lib/io/ajax.js":
/*!*********************************************************!*\
  !*** ./branches/cloud-collect/common/js/lib/io/ajax.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * 实现ajax功能，注意主动调用abort跟断网时请求被中断是完全一样的。\n *\n * 例子：\n *\n * var ajax = require(\"../io/ajax\");\n * ajax({\n *     url: \"/api/api.jsp\",\n *     timeout: 30000, // 缺少值3秒,\n *     data: { id: 1 }, // 仅method=post时生效，如果传入json对象会被转换成queryString，如果传入字符串则会原样发送\n *     method: \"post\", // 默认是get\n *     type: \"json\", // 默认是json\n *     onSuccess: function(jsonObject) { console.log(jsonObject); },\n *     onError: function(xmlHttp) { }, // 当访问出错，比如网络连接不上、解析内容失败时触发，超时也会触发\n *     onTimeout: function(xmlHttp) { }, // 超时触发\n *     onAbort: function() { } // 网络中断时触发\n * });\n *\n */\n\nvar getXMLHttpRequest = __webpack_require__(/*! ../io/getXMLHttpRequest */ \"./branches/cloud-collect/common/js/lib/io/getXMLHttpRequest.js\");\nvar merge = __webpack_require__(/*! ../json/merge */ \"./branches/cloud-collect/common/js/lib/json/merge.js\");\nvar jsonToQuery = __webpack_require__(/*! ../json/jsonToQuery */ \"./branches/cloud-collect/common/js/lib/json/jsonToQuery.js\");\nvar appendQuery = __webpack_require__(/*! ../str/appendQuery */ \"./branches/cloud-collect/common/js/lib/str/appendQuery.js\");\nvar console = __webpack_require__(/*! ../io/console */ \"./branches/cloud-collect/common/js/lib/io/console.js\");\nvar configUrl = __webpack_require__(/*! lib/util/configUrl */ \"./branches/cloud-collect/common/js/lib/util/configUrl.js\");\nvar _popup_wait = {};\n\nmodule.exports = function (opts) {\n    var xmlHttp = getXMLHttpRequest();\n    var tid = 0;\n    var path = \"plugin/dialog/wait\";\n\n    opts = merge({\n        \"url\": \"\",\n        \"timeout\": 30 * 1000,\n        \"data\": {},\n        \"onSuccess\": function () {},\n        \"onError\": function () {},\n        \"onTimeout\": function () {},\n        \"onAbort\": function () {},\n        \"method\": \"get\",\n        \"type\": \"json\" // \"text/json/xml\"\n    }, opts);\n\n    configUrl(opts.url, function (url) {\n        opts.url = url;\n        opts.method = opts.method.toLocaleLowerCase() == \"get\" ? \"get\" : \"post\";\n\n        if (opts[\"method\"] == \"get\" && opts[\"data\"]) {\n            opts[\"url\"] = appendQuery(opts[\"url\"], opts[\"data\"]);\n        }\n\n        var closeWait = function (bool, url) {\n            if (bool && _popup_wait[url]) {\n                _popup_wait[url].hide();\n                delete _popup_wait[url];\n            }\n        };\n\n        var callback = function () {\n            if (xmlHttp.readyState == 4) {\n                clearTimeout(tid);\n                var data = \"\";\n                tid = 0;\n\n                if (opts[\"type\"] == \"xml\") {\n                    data = xmlHttp.responseXML;\n                } else if (opts[\"type\"] == \"text\") {\n                    data = xmlHttp.responseText;\n                } else {\n                    if (xmlHttp.responseText != null && typeof xmlHttp.responseText == \"string\") {\n                        try {\n                            data = new Function(\"return \" + xmlHttp.responseText)();\n                        } catch (ex) {\n                            data = {};\n                            console.error(ex);\n                        }\n                    } else {\n                        data = {};\n                    }\n                }\n\n                if (xmlHttp.status == 200) {\n                    try {\n                        closeWait(opts.wait, url);\n                        opts.onSuccess(data);\n                    } catch (ex) {\n                        console.error(ex);\n                    }\n                } else if (xmlHttp.status == 401) {\n                    closeWait(opts.wait, url);\n                    alert(\"请先登录！\");\n                    top.location.href = \"/login.html\";\n                } else if (xmlHttp.status == 0) {\n                    try {\n                        closeWait(opts.wait, url);\n                        opts.onAbort(xmlHttp); // 中断或断网\n                    } catch (ex) {\n                        console.error(ex);\n                    }\n\n                    try {\n                        closeWait(opts.wait, url);\n                        opts.onError(xmlHttp);\n                    } catch (ex) {\n                        console.error(ex);\n                    }\n                } else {\n                    try {\n                        closeWait(opts.wait, url);\n                        console.error(\"请求[\" + opts[\"url\"] + \"]失败，状态码为\" + xmlHttp.status);\n                        opts.onError(xmlHttp);\n                    } catch (ex) {\n                        console.error(ex);\n                    }\n                }\n            }\n        };\n\n        xmlHttp.onreadystatechange = callback;\n        // xmlHttp.timeout = opts[\"timeout\"]; //IE不支持！\n        xmlHttp.open(opts.method, opts.url, true);\n\n        try {\n            xmlHttp.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n            xmlHttp.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n            if (opts.wait && top.dialogManager && !_popup_wait[url] && !document.querySelector(\".m-loading\")) {\n                _popup_wait[url] = top.dialogManager.getDialog(path)();\n                _popup_wait[url].show();\n            }\n        } catch (ex) {}\n\n        xmlHttp.send(opts.method == \"get\" ? null : typeof opts[\"data\"] == \"string\" ? opts[\"data\"] : jsonToQuery(opts[\"data\"]));\n\n        tid = setTimeout(function () {\n            tid = 0;\n            xmlHttp.abort();\n\n            try {\n                closeWait(opts.wait, url);\n                opts.onError(xmlHttp);\n                opts.onTimeout(xmlHttp);\n            } catch (ex) {\n                console.error(ex);\n            }\n        }, opts.timeout);\n    });\n\n    return xmlHttp;\n};\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/js/lib/io/ajax.js?");

/***/ }),

/***/ "./branches/cloud-collect/common/js/lib/io/console.js":
/*!************************************************************!*\
  !*** ./branches/cloud-collect/common/js/lib/io/console.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * 对window.console做了封装，防止由于没有删除console语句而报错\n * 如果需要使用到console对象，请引入本文件，而不要直接使用window.console\n *\n */\n\nvar methods = [\"log\", \"debug\", \"info\", \"warn\", \"exception\", \"assert\", \"dir\", \"dirxml\", \"trace\", \"group\", \"groupCollapsed\", \"groupEnd\", \"profile\", \"profileEnd\", \"count\", \"clear\", \"time\", \"timeEnd\", \"timeStamp\", \"table\", \"error\", \"markTimeline\", \"timeline\", \"timelineEnd\", \"cd\", \"countReset\", \"select\"];\n\nvar console = window.console || {};\nvar emptyFunc = function () {};\n\nfor (var key in methods) {\n    if (!(methods[key] in console)) {\n        console[methods[key]] = emptyFunc;\n    }\n}\n\nmodule.exports = console;\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/js/lib/io/console.js?");

/***/ }),

/***/ "./branches/cloud-collect/common/js/lib/io/getXMLHttpRequest.js":
/*!**********************************************************************!*\
  !*** ./branches/cloud-collect/common/js/lib/io/getXMLHttpRequest.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * 获取AJAX请求对象，本文件是提供给ajax.js使用，一般不需要使用它\n */\n\nvar console = __webpack_require__(/*! ../io/console */ \"./branches/cloud-collect/common/js/lib/io/console.js\");\n\nmodule.exports = function () {\n    var xmlhttp = null;\n\n    if (\"XMLHttpRequest\" in window) {\n        xmlhttp = new XMLHttpRequest();\n    } else {\n        try {\n            xmlhttp = new ActiveXObject(\"Msxml2.XMLHTTP\");\n        } catch (ex) {\n            try {\n                xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\n            } catch (ex) {\n                console.error(\"无法创建XMLHttpRequest对象\");\n            }\n        }\n    }\n\n    return xmlhttp;\n};\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/js/lib/io/getXMLHttpRequest.js?");

/***/ }),

/***/ "./branches/cloud-collect/common/js/lib/json/jsonToQuery.js":
/*!******************************************************************!*\
  !*** ./branches/cloud-collect/common/js/lib/json/jsonToQuery.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * 来自STK.js\n * 将json转化成查询字符串，第二个参数如果设置为true，则对值做encodeURIComponent编码\n * 例子：\n *\n * var jsonToQuery = require(\"../json/jsonToQuery\");\n * var json = { id: 1, name: \"benny\" };\n * var query = jsonToQuery(json, true); // 生成一个字符串\"id=1&name=benny\"\n *\n */\n\nvar trim = __webpack_require__(/*! ../str/trim */ \"./branches/cloud-collect/common/js/lib/str/trim.js\");\nvar format = function (val) {\n    val = val == null ? \"\" : trim(val.toString());\n    return encodeURIComponent(val);\n};\n\nmodule.exports = function (json) {\n    var query = [];\n\n    if (typeof json == \"object\") {\n        for (var k in json) {\n            if (k === '$nullName') {\n                query = query.concat(json[k]);\n                continue;\n            }\n            if (json[k] instanceof Array) {\n                for (var i = 0, len = json[k].length; i < len; i++) {\n                    query.push(k + \"=\" + format(json[k][i]));\n                }\n            } else {\n                if (typeof json[k] != 'function') {\n                    query.push(k + \"=\" + format(json[k]));\n                }\n            }\n        }\n    }\n\n    if (query.length) {\n        return query.join(\"&\");\n    } else {\n        return \"\";\n    }\n};\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/js/lib/json/jsonToQuery.js?");

/***/ }),

/***/ "./branches/cloud-collect/common/js/lib/json/merge.js":
/*!************************************************************!*\
  !*** ./branches/cloud-collect/common/js/lib/json/merge.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * 合并多个对象，将后面的对象和前面的对象一层一层的合并\n * 支持第一个参数传boolean类型，当传true时，支持深层合并\n * 例子：\n *\n * var merge = require(\"../json/merge\");\n * var opts = { url: \"http://www.baidu.com\" };\n * var defaultOpts = { url: \"\", method: \"get\" };\n * opts = merge(defaultOpts, opts);\n * opts的值为：\n * opts = {\n *     url: \"http://www.baidu.com\",\n *     method: \"get\"\n * }\n *\n */\n\nvar getType = __webpack_require__(/*! ../util/getType */ \"./branches/cloud-collect/common/js/lib/util/getType.js\");\nvar console = __webpack_require__(/*! ../io/console */ \"./branches/cloud-collect/common/js/lib/io/console.js\");\nvar each = __webpack_require__(/*! ../util/each */ \"./branches/cloud-collect/common/js/lib/util/each.js\");\n\nmodule.exports = function () {\n\n    var result = [];\n    var args = [].slice.call(arguments);\n    result.push.apply(result, args);\n\n    var deep = false;\n\n    function mergeObj(r, obj) {\n        each(obj, function (v, k) {\n            if (deep && (getType(r[k]) == \"object\" && getType(v) == \"object\" || getType(r[k]) == \"array\" && getType(v) == \"array\")) {\n                mergeObj(r[k], v);\n            } else {\n                r[k] = v;\n            }\n        });\n    }\n\n    var newObj = {};\n\n    each(result, function (item, index) {\n        if (index == 0 && item === true) {\n            deep = true;\n        } else if (getType(item) == \"object\") {\n            mergeObj(newObj, item);\n        }\n    });\n\n    return newObj;\n};\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/js/lib/json/merge.js?");

/***/ }),

/***/ "./branches/cloud-collect/common/js/lib/json/queryToJson.js":
/*!******************************************************************!*\
  !*** ./branches/cloud-collect/common/js/lib/json/queryToJson.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * 来自STK.js\n * 将查询字符串转化成json对象，是jsonToQuery的反操作\n * 例子：\n *\n * var queryToJson = require(\"../json/jsonToQuery\");\n * var str = \"id=1&name=benny\";\n * var json = queryToJson(str);\n * json的值将为：\n * json = { id: 1, name: \"benny\" };\n *\n */\nvar trim = __webpack_require__(/*! ../str/trim */ \"./branches/cloud-collect/common/js/lib/str/trim.js\");\nmodule.exports = function (qs) {\n    var qList = trim(qs).split(\"&\"),\n        json = {},\n        i = 0,\n        len = qList.length;\n\n    for (; i < len; i++) {\n        if (qList[i]) {\n            var hash = qList[i].split(\"=\"),\n                key = hash[0],\n                value = hash[1];\n            // 如果只有key没有value, 那么将全部丢入一个$nullName数组中\n            if (hash.length < 2) {\n                value = key;\n                key = '$nullName';\n            }\n            if (!(key in json)) {\n                // 如果缓存堆栈中没有这个数据，则直接存储\n                json[key] = decodeURIComponent(value);\n            } else {\n                // 如果堆栈中已经存在这个数据，则转换成数组存储\n                json[key] = [].concat(json[key], decodeURIComponent(value));\n            }\n        }\n    }\n    return json;\n};\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/js/lib/json/queryToJson.js?");

/***/ }),

/***/ "./branches/cloud-collect/common/js/lib/str/appendQuery.js":
/*!*****************************************************************!*\
  !*** ./branches/cloud-collect/common/js/lib/str/appendQuery.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * 将一组查询字符串智能拼到url中去\n * 增加传入一个对象的功能\n * 例子：\n *\n * var appendQuery = require(\"../str/appendQuery\");\n * var url = appendQuery(\"a.html?abc=1\", \"a=1&b=2\"); // a.html?abc=1&a=1&b=2\n * url = appendQuery(\"a.html\", \"a=1&b=2\"); // a.html?a=1&b=2\n * url = appendQuery(\"a.html\", { \"a\": 1, \"b\": 2 }); // a.html?a=1&b=2\n *\n **/\nvar getType = __webpack_require__(/*! ../util/getType */ \"./branches/cloud-collect/common/js/lib/util/getType.js\");\nvar jsonToQuery = __webpack_require__(/*! ../json/jsonToQuery */ \"./branches/cloud-collect/common/js/lib/json/jsonToQuery.js\");\n\nmodule.exports = function (url, queryString) {\n  queryString = getType(queryString) == \"string\" ? queryString : jsonToQuery(queryString);\n  return url + (url.indexOf(\"?\") == -1 ? \"?\" : \"&\") + queryString;\n};\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/js/lib/str/appendQuery.js?");

/***/ }),

/***/ "./branches/cloud-collect/common/js/lib/str/isEmpty.js":
/*!*************************************************************!*\
  !*** ./branches/cloud-collect/common/js/lib/str/isEmpty.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * 检查字符串是否为空\n *\n * var isEmpty = require(\"../str/isEmpty\");\n * console.log(isEmpty(null)); // true\n * console.log(isEmpty(\" \")); // true\n *\n */\n\nvar trim = __webpack_require__(/*! ../str/trim */ \"./branches/cloud-collect/common/js/lib/str/trim.js\");\n\nmodule.exports = function (str) {\n  return trim(str).length == 0;\n};\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/js/lib/str/isEmpty.js?");

/***/ }),

/***/ "./branches/cloud-collect/common/js/lib/str/trim.js":
/*!**********************************************************!*\
  !*** ./branches/cloud-collect/common/js/lib/str/trim.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * 清除字符串前后空白字符\n * 例子：\n *\n * var trim = require(\"../str/trim\");\n * var str = trim(\" text \"); // \"text\"\n *\n */\nmodule.exports = function (str) {\n\tif (str == null) {\n\t\treturn \"\";\n\t}\n\n\tstr = str.toString();\n\tvar len = str.length;\n\tvar s = 0;\n\tvar reg = /(\\u3000|\\s|\\t|\\u00A0)/;\n\n\twhile (s < len) {\n\t\tif (!reg.test(str.charAt(s))) {\n\t\t\tbreak;\n\t\t}\n\n\t\ts += 1;\n\t}\n\n\twhile (len > s) {\n\t\tif (!reg.test(str.charAt(len - 1))) {\n\t\t\tbreak;\n\t\t}\n\n\t\tlen -= 1;\n\t}\n\n\treturn str.slice(s, len);\n};\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/js/lib/str/trim.js?");

/***/ }),

/***/ "./branches/cloud-collect/common/js/lib/util/URL.js":
/*!**********************************************************!*\
  !*** ./branches/cloud-collect/common/js/lib/util/URL.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * URL的解析和合成，注意：该设计有缺陷，不支持username:userpass，不过一般都用不上\n *\n * var URL = require(\"../util/URL\");\n * var urlObj = URL.parse(\"http://www.baidu.com:8080/index.html?p=1#link1\");\n * 得到：\n * {\n *     hash: \"link1\",\n *     host: \"www.baidu.com\",\n *     path: \"/index.html\",\n *     port: \"8080\",\n *     query: \"p=1\",\n *     scheme: \"http:\",\n *     slash: \"//\",\n *     url: \"http://www.baidu.com:8080/index.html?p=1#link1\"\n * }\n */\nvar link = null;\nvar merge = __webpack_require__(/*! ../json/merge */ \"./branches/cloud-collect/common/js/lib/json/merge.js\");\nvar isEmpty = __webpack_require__(/*! ../str/isEmpty */ \"./branches/cloud-collect/common/js/lib/str/isEmpty.js\");\nvar queryToJson = __webpack_require__(/*! ../json/queryToJson */ \"./branches/cloud-collect/common/js/lib/json/queryToJson.js\");\nmodule.exports = {\n    parse: function (url) {\n\n        link = link || document.createElement(\"A\");\n        link.href = url;\n\n        var result = {\n            \"url\": url,\n            \"scheme\": link.protocol,\n            \"host\": link.host,\n            \"port\": link.port,\n            \"path\": link.pathname,\n            \"query\": isEmpty(link.search) ? \"\" : link.search.substr(1),\n            \"hash\": isEmpty(link.hash) ? \"\" : link.hash.substr(1)\n        };\n\n        result[\"queryJson\"] = queryToJson(result[\"query\"]);\n        result[\"hashJson\"] = queryToJson(result[\"hash\"]);\n        return result;\n\n        // var parse_url = /^(?:([A-Za-z]+:)(\\/{0,3}))?([0-9.\\-A-Za-z]+\\.[0-9A-Za-z]+)?(?::(\\d+))?(?:(\\.?[\\.\\/]*\\/[^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/;\n        // var names = ['url', 'scheme', 'slash', 'host', 'port', 'path', 'query', 'hash'];\n        // var results = parse_url.exec(url);\n        // var ret = {};\n\n        // for (var i = 0, len = names.length; i < len; i += 1) {\n        //     ret[names[i]] = results[i] || '';\n        // }\n\n        // return ret;\n    },\n    build: function (url) {\n        return url.scheme + \"//\" + url.host + (url.port != \"\" ? \":\" + url.port : \"\") + url.path + (url.query != \"\" ? \"?\" + url.query : \"\") + (url.hash != \"\" ? \"#\" + url.hash : \"\");\n    }\n};\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/js/lib/util/URL.js?");

/***/ }),

/***/ "./branches/cloud-collect/common/js/lib/util/configUrl.js":
/*!****************************************************************!*\
  !*** ./branches/cloud-collect/common/js/lib/util/configUrl.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*******\r\n * 配置处理URL\r\n */\nmodule.exports = function (url, fn) {\n    var href = location.href;\n    if (/#\\/(\\w+)\\//.test(href)) {\n        var mod1 = RegExp.$1;\n        var newUrl = function (json) {\n            try {\n                var mod2 = null;\n                if (/#\\/(\\w+\\/\\w+)\\//.test(href)) {\n                    mod2 = RegExp.$1;\n                }\n                var obj = JSON.parse(json);\n                var result = mod2 ? obj[mod2] ? obj[mod2] : obj[mod1] : obj[mod1];\n                if (result) {\n                    var fix_url = (result.config && result.config.url ? result.config.url : \"\").replace(/\\/$/, \"\");\n                    var fix_proxy = result.config && result.config.proxy ? result.config.proxy : null;\n                    var redirect_proxy = result.redirect && result.redirect.proxy ? result.redirect.proxy : null;\n                    var redirect_to = result.redirect && result.redirect.to ? result.redirect.to : null;\n                    var set = result.post || {};\n                    var arr = url.split(\"?\");\n                    var param = arr.length == 2 ? \"?\" + arr[1] : \"\";\n                    var item = set[arr[0].replace(/^\\//, \"\")];\n                    if (item && item.fix && item.url && (item.proxy || fix_proxy)) {\n                        var n_proxy = (item.proxy || fix_proxy).replace(/\\/$/, \"\");\n                        var n_url = item.url.replace(/^\\//, \"\");\n                        return n_proxy + \"/\" + fix_url + (fix_url ? \"/\" : \"\") + n_url + param;\n                    } else if (item && item.proxy && item.url) {\n                        return item.proxy.replace(/\\/$/, \"\") + \"/\" + item.url.replace(/^\\//, \"\") + param;\n                    } else if (redirect_proxy && redirect_to) {\n                        return url.replace(new RegExp(\"^\" + redirect_proxy), redirect_to);\n                    }\n                }\n                return url;\n            } catch (e) {\n                return url;\n            }\n        };\n\n        if (window.localStorage && window.localStorage.getItem(\"_config.url.json\")) {\n            var data = window.localStorage.getItem(\"_config.url.json\");\n            fn(newUrl(data));\n        } else {\n            var xhr = new XMLHttpRequest();\n            var timer = null;\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState == 4) {\n                    clearTimeout(timer);\n                    if (xhr.status == 200) {\n                        var data = xhr.responseText;\n                        if (window.localStorage) {\n                            window.localStorage.setItem(\"_config.url.json\", data);\n                        }\n                        fn(newUrl(data));\n                    } else {\n                        fn(url);\n                    }\n                }\n            };\n            xhr.open(\"get\", \"/common/config/url.json?ver=\" + new Date().getTime(), true);\n            xhr.send();\n            timer = setTimeout(function () {\n                timer = null;\n                xhr.abort();\n                fn(url);\n            }, 2000);\n        }\n    } else {\n        if (window.localStorage && window.localStorage.getItem(\"_config.url.json\")) {\n            window.localStorage.removeItem(\"_config.url.json\");\n        }\n        fn(url);\n    }\n};\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/js/lib/util/configUrl.js?");

/***/ }),

/***/ "./branches/cloud-collect/common/js/lib/util/dataType.js":
/*!***************************************************************!*\
  !*** ./branches/cloud-collect/common/js/lib/util/dataType.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/***********\n * 数据类型\n * @type {obj}\n */\nvar getType = __webpack_require__(/*! lib/util/getType */ \"./branches/cloud-collect/common/js/lib/util/getType.js\");\nvar getNode = __webpack_require__(/*! lib/dom/isNode */ \"./branches/cloud-collect/common/js/lib/dom/isNode.js\");\n\nmodule.exports = {\n    isNumber: function (obj) {\n        return getType(obj) === \"number\";\n    },\n    isString: function (obj) {\n        return getType(obj) === \"string\";\n    },\n    isArray: function (obj) {\n        return getType(obj) === \"array\";\n    },\n    isObject: function (obj) {\n        return getType(obj) === \"object\";\n    },\n    isBoolean: function (obj) {\n        return getType(obj) === \"boolean\";\n    },\n    isFunction: function (obj) {\n        return getType(obj) === \"function\";\n    },\n    isNull: function (obj) {\n        return getType(obj) === \"null\";\n    },\n    isUndefined: function (obj) {\n        return getType(obj) === \"undefined\";\n    },\n    isNode: function (obj) {\n        return getNode(obj);\n    }\n};\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/js/lib/util/dataType.js?");

/***/ }),

/***/ "./branches/cloud-collect/common/js/lib/util/each.js":
/*!***********************************************************!*\
  !*** ./branches/cloud-collect/common/js/lib/util/each.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * 遍历对象或者数组的键值并传给回调函数\n * 例子：\n *\n * var each = require(\"../util/each\");\n * var obj = { id: 1, name: \"benny\" };\n * each(obj, function(val, key, source) {\n *    console.log(\"值为:\" + val, \"key为\" + key);\n *    console.log(\"被遍历的源对象是\", source); // 即obj\n * });\n */\n\nvar getType = __webpack_require__(/*! ./getType */ \"./branches/cloud-collect/common/js/lib/util/getType.js\");\nmodule.exports = function (obj, fn) {\n    if (getType(obj) == \"array\") {\n        if ([].forEach) {\n            [].forEach.call(obj, fn);\n        } else {\n            var len = obj.length;\n            for (var i = 0; i < len; i++) {\n                if (/msie [678]\\./i.test(navigator.userAgent) || obj.hasOwnProperty(i)) {\n                    if (fn(obj[i], i, obj) === false) {\n                        break;\n                    }\n                }\n            }\n        }\n    } else {\n        for (var k in obj) {\n            if (/msie [678]\\./i.test(navigator.userAgent) || obj.hasOwnProperty(k)) {\n                if (fn(obj[k], k, obj) === false) {\n                    break;\n                }\n            }\n        }\n    }\n};\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/js/lib/util/each.js?");

/***/ }),

/***/ "./branches/cloud-collect/common/js/lib/util/getType.js":
/*!**************************************************************!*\
  !*** ./branches/cloud-collect/common/js/lib/util/getType.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * 检查传入的对象\n * 如果是null则返回null(typeof null是返回object)\n * 如果是数组则返回array(typeof []是返回object)\n *\n * var getType = require(\"../util/getType\");\n * var type = getType([]); // array\n */\nmodule.exports = function (obj) {\n  var type;\n  return ((type = typeof obj) == \"object\" ? obj == null && \"null\" || Object.prototype.toString.call(obj).slice(8, -1) : type).toLowerCase();\n};\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/js/lib/util/getType.js?");

/***/ }),

/***/ "./branches/cloud-collect/common/js/lib/util/when.js":
/*!***********************************************************!*\
  !*** ./branches/cloud-collect/common/js/lib/util/when.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n* 异步队列。使用when.js的实现。 https://github.com/cujojs/when\n* 更多例子请网上查阅when.js的资料\n* 顺序异步执行多个函数的例子：\n* 注意：首先执行fun1，如果执行过程中调用了defer.reject则会跳到otherwise，否则调用defer.resolve()继续下一个then指明的fun2。\n*\n* var when = require(\"../util/when\");\n* var ajax = require(\"../io/ajax\");\n*\n* var fun1 = function() {\n*     var defer = when.defer();\n*\n*     ajax({\n*         url: \"/a.php\",\n*         method: \"get\",\n*         onSuccess: function() {\n*             defer.resolve();\n*         },\n*         onError: function() {\n*             defer.reject(\"网络连接失败1\");\n*         }\n*     })\n*\n*     return defer.promise; // 注意不管如何，函数在return时一定要返回这个对象\n* }\n*\n* var fun2 = function() {\n*     var defer = when.defer();\n*\n*     ajax({\n*         url: \"/b.php\",\n*         method: \"get\",\n*         onSuccess: function() {\n*             defer.resolve();\n*         },\n*         onError: function() {\n*             defer.reject(\"网络连接失败2\");\n*         }\n*     })\n*\n*     return defer.promise; // 注意不管如何，函数在return时一定要返回这个对象\n* }\n*\n* var promise = fun1()\n*     .then(fun2)\n*     .then(function() {\n*         console.log(\"前边的两个函数都调用了defer.resolve表示它们都执行成功，这里可以做最后的处理了\")\n*     })\n*     .otherwise(function(msg) {\n*         // 如果调用过程中没有调用defer.reject是不会走到这的\n*         // msg是defer.reject传过来的值，它可以是对象\n*         console.log(\"报错信息：\" + msg);\n*     });\n*\n*\n*/\nvar global = window;\n/** @license MIT License (c) copyright 2011-2013 original author or authors */\n\n/**\n* A lightweight CommonJS Promises/A and when() implementation\n* when is part of the cujo.js family of libraries (http://cujojs.com/)\n*\n* Licensed under the MIT License at:\n* http://www.opensource.org/licenses/mit-license.php\n*\n* @author Brian Cavalier\n* @author John Hann\n* @version 2.5.1\n*/\n\n// Public API\n\nwhen.promise = promise; // Create a pending promise\nwhen.resolve = resolve; // Create a resolved promise\nwhen.reject = reject; // Create a rejected promise\nwhen.defer = defer; // Create a {promise, resolver} pair\n\nwhen.join = join; // Join 2 or more promises\n\nwhen.all = all; // Resolve a list of promises\nwhen.map = map; // Array.map() for promises\nwhen.reduce = reduce; // Array.reduce() for promises\nwhen.settle = settle; // Settle a list of promises\n\nwhen.any = any; // One-winner race\nwhen.some = some; // Multi-winner race\n\nwhen.isPromise = isPromiseLike; // DEPRECATED: use isPromiseLike\nwhen.isPromiseLike = isPromiseLike; // Is something promise-like, aka thenable\n\n/**\n * Register an observer for a promise or immediate value.\n *\n * @param {*} promiseOrValue\n * @param {function?} [onFulfilled] callback to be called when promiseOrValue is\n *   successfully fulfilled.  If promiseOrValue is an immediate value, callback\n *   will be invoked immediately.\n * @param {function?} [onRejected] callback to be called when promiseOrValue is\n *   rejected.\n * @param {function?} [onProgress] callback to be called when progress updates\n *   are issued for promiseOrValue.\n * @returns {Promise} a new {@link Promise} that will complete with the return\n *   value of callback or errback or the completion value of promiseOrValue if\n *   callback and/or errback is not supplied.\n */\nfunction when(promiseOrValue, onFulfilled, onRejected, onProgress) {\n        // Get a trusted promise for the input promiseOrValue, and then\n        // register promise handlers\n        return cast(promiseOrValue).then(onFulfilled, onRejected, onProgress);\n}\n\nfunction cast(x) {\n        return x instanceof Promise ? x : resolve(x);\n}\n\n/**\n * Trusted Promise constructor.  A Promise created from this constructor is\n * a trusted when.js promise.  Any other duck-typed promise is considered\n * untrusted.\n * @constructor\n * @param {function} sendMessage function to deliver messages to the promise's handler\n * @param {function?} inspect function that reports the promise's state\n * @name Promise\n */\nfunction Promise(sendMessage, inspect) {\n        this._message = sendMessage;\n        this.inspect = inspect;\n}\n\nPromise.prototype = {\n        /**\n         * Register handlers for this promise.\n         * @param [onFulfilled] {Function} fulfillment handler\n         * @param [onRejected] {Function} rejection handler\n         * @param [onProgress] {Function} progress handler\n         * @return {Promise} new Promise\n         */\n        then: function (onFulfilled, onRejected, onProgress) {\n                /*jshint unused:false*/\n                var args, sendMessage;\n\n                args = arguments;\n                sendMessage = this._message;\n                return _promise(function (resolve, reject, notify) {\n                        sendMessage('when', args, resolve, notify);\n                }, this._status && this._status.observed());\n        },\n\n        /**\n         * Register a rejection handler.  Shortcut for .then(undefined, onRejected)\n         * @param {function?} onRejected\n         * @return {Promise}\n         */\n        otherwise: function (onRejected) {\n                return this.then(undef, onRejected);\n        },\n\n        /**\n         * Ensures that onFulfilledOrRejected will be called regardless of whether\n         * this promise is fulfilled or rejected.  onFulfilledOrRejected WILL NOT\n         * receive the promises' value or reason.  Any returned value will be disregarded.\n         * onFulfilledOrRejected may throw or return a rejected promise to signal\n         * an additional error.\n         * @param {function} onFulfilledOrRejected handler to be called regardless of\n         *  fulfillment or rejection\n         * @returns {Promise}\n         */\n        ensure: function (onFulfilledOrRejected) {\n                return typeof onFulfilledOrRejected === 'function' ? this.then(injectHandler, injectHandler)['yield'](this) : this;\n\n                function injectHandler() {\n                        return resolve(onFulfilledOrRejected());\n                }\n        },\n\n        /**\n         * Shortcut for .then(function() { return value; })\n         * @param  {*} value\n         * @return {Promise} a promise that:\n         *  - is fulfilled if value is not a promise, or\n         *  - if value is a promise, will fulfill with its value, or reject\n         *    with its reason.\n         */\n        'yield': function (value) {\n                return this.then(function () {\n                        return value;\n                });\n        },\n\n        /**\n         * Runs a side effect when this promise fulfills, without changing the\n         * fulfillment value.\n         * @param {function} onFulfilledSideEffect\n         * @returns {Promise}\n         */\n        tap: function (onFulfilledSideEffect) {\n                return this.then(onFulfilledSideEffect)['yield'](this);\n        },\n\n        /**\n         * Assumes that this promise will fulfill with an array, and arranges\n         * for the onFulfilled to be called with the array as its argument list\n         * i.e. onFulfilled.apply(undefined, array).\n         * @param {function} onFulfilled function to receive spread arguments\n         * @return {Promise}\n         */\n        spread: function (onFulfilled) {\n                return this.then(function (array) {\n                        // array may contain promises, so resolve its contents.\n                        return all(array, function (array) {\n                                return onFulfilled.apply(undef, array);\n                        });\n                });\n        },\n\n        /**\n         * Shortcut for .then(onFulfilledOrRejected, onFulfilledOrRejected)\n         * @deprecated\n         */\n        always: function (onFulfilledOrRejected, onProgress) {\n                return this.then(onFulfilledOrRejected, onFulfilledOrRejected, onProgress);\n        }\n};\n\n/**\n * Returns a resolved promise. The returned promise will be\n *  - fulfilled with promiseOrValue if it is a value, or\n *  - if promiseOrValue is a promise\n *    - fulfilled with promiseOrValue's value after it is fulfilled\n *    - rejected with promiseOrValue's reason after it is rejected\n * @param  {*} value\n * @return {Promise}\n */\nfunction resolve(value) {\n        return promise(function (resolve) {\n                resolve(value);\n        });\n}\n\n/**\n * Returns a rejected promise for the supplied promiseOrValue.  The returned\n * promise will be rejected with:\n * - promiseOrValue, if it is a value, or\n * - if promiseOrValue is a promise\n *   - promiseOrValue's value after it is fulfilled\n *   - promiseOrValue's reason after it is rejected\n * @param {*} promiseOrValue the rejected value of the returned {@link Promise}\n * @return {Promise} rejected {@link Promise}\n */\nfunction reject(promiseOrValue) {\n        return when(promiseOrValue, rejected);\n}\n\n/**\n * Creates a {promise, resolver} pair, either or both of which\n * may be given out safely to consumers.\n * The resolver has resolve, reject, and progress.  The promise\n * has then plus extended promise API.\n *\n * @return {{\n * promise: Promise,\n * resolve: function:Promise,\n * reject: function:Promise,\n * notify: function:Promise\n * resolver: {\n *        resolve: function:Promise,\n *        reject: function:Promise,\n *        notify: function:Promise\n * }}}\n */\nfunction defer() {\n        var deferred, pending, resolved;\n\n        // Optimize object shape\n        deferred = {\n                promise: undef, resolve: undef, reject: undef, notify: undef,\n                resolver: { resolve: undef, reject: undef, notify: undef }\n        };\n\n        deferred.promise = pending = promise(makeDeferred);\n\n        return deferred;\n\n        function makeDeferred(resolvePending, rejectPending, notifyPending) {\n                deferred.resolve = deferred.resolver.resolve = function (value) {\n                        if (resolved) {\n                                return resolve(value);\n                        }\n                        resolved = true;\n                        resolvePending(value);\n                        return pending;\n                };\n\n                deferred.reject = deferred.resolver.reject = function (reason) {\n                        if (resolved) {\n                                return resolve(rejected(reason));\n                        }\n                        resolved = true;\n                        rejectPending(reason);\n                        return pending;\n                };\n\n                deferred.notify = deferred.resolver.notify = function (update) {\n                        notifyPending(update);\n                        return update;\n                };\n        }\n}\n\n/**\n * Creates a new promise whose fate is determined by resolver.\n * @param {function} resolver function(resolve, reject, notify)\n * @returns {Promise} promise whose fate is determine by resolver\n */\nfunction promise(resolver) {\n        return _promise(resolver, monitorApi.PromiseStatus && monitorApi.PromiseStatus());\n}\n\n/**\n * Creates a new promise, linked to parent, whose fate is determined\n * by resolver.\n * @param {function} resolver function(resolve, reject, notify)\n * @param {Promise?} status promise from which the new promise is begotten\n * @returns {Promise} promise whose fate is determine by resolver\n * @private\n */\nfunction _promise(resolver, status) {\n        var self,\n            value,\n            consumers = [];\n\n        self = new Promise(_message, inspect);\n        self._status = status;\n\n        // Call the provider resolver to seal the promise's fate\n        try {\n                resolver(promiseResolve, promiseReject, promiseNotify);\n        } catch (e) {\n                promiseReject(e);\n        }\n\n        // Return the promise\n        return self;\n\n        /**\n         * Private message delivery. Queues and delivers messages to\n         * the promise's ultimate fulfillment value or rejection reason.\n         * @private\n         * @param {String} type\n         * @param {Array} args\n         * @param {Function} resolve\n         * @param {Function} notify\n         */\n        function _message(type, args, resolve, notify) {\n                consumers ? consumers.push(deliver) : enqueue(function () {\n                        deliver(value);\n                });\n\n                function deliver(p) {\n                        p._message(type, args, resolve, notify);\n                }\n        }\n\n        /**\n         * Returns a snapshot of the promise's state at the instant inspect()\n         * is called. The returned object is not live and will not update as\n         * the promise's state changes.\n         * @returns {{ state:String, value?:*, reason?:* }} status snapshot\n         *  of the promise.\n         */\n        function inspect() {\n                return value ? value.inspect() : toPendingState();\n        }\n\n        /**\n         * Transition from pre-resolution state to post-resolution state, notifying\n         * all listeners of the ultimate fulfillment or rejection\n         * @param {*|Promise} val resolution value\n         */\n        function promiseResolve(val) {\n                if (!consumers) {\n                        return;\n                }\n\n                var queue = consumers;\n                consumers = undef;\n\n                enqueue(function () {\n                        value = coerce(self, val);\n                        if (status) {\n                                updateStatus(value, status);\n                        }\n                        runHandlers(queue, value);\n                });\n        }\n\n        /**\n         * Reject this promise with the supplied reason, which will be used verbatim.\n         * @param {*} reason reason for the rejection\n         */\n        function promiseReject(reason) {\n                promiseResolve(rejected(reason));\n        }\n\n        /**\n         * Issue a progress event, notifying all progress listeners\n         * @param {*} update progress event payload to pass to all listeners\n         */\n        function promiseNotify(update) {\n                if (consumers) {\n                        var queue = consumers;\n                        enqueue(function () {\n                                runHandlers(queue, progressed(update));\n                        });\n                }\n        }\n}\n\n/**\n * Run a queue of functions as quickly as possible, passing\n * value to each.\n */\nfunction runHandlers(queue, value) {\n        for (var i = 0; i < queue.length; i++) {\n                queue[i](value);\n        }\n}\n\n/**\n * Creates a fulfilled, local promise as a proxy for a value\n * NOTE: must never be exposed\n * @param {*} value fulfillment value\n * @returns {Promise}\n */\nfunction fulfilled(value) {\n        return near(new NearFulfilledProxy(value), function () {\n                return toFulfilledState(value);\n        });\n}\n\n/**\n * Creates a rejected, local promise with the supplied reason\n * NOTE: must never be exposed\n * @param {*} reason rejection reason\n * @returns {Promise}\n */\nfunction rejected(reason) {\n        return near(new NearRejectedProxy(reason), function () {\n                return toRejectedState(reason);\n        });\n}\n\n/**\n * Creates a near promise using the provided proxy\n * NOTE: must never be exposed\n * @param {object} proxy proxy for the promise's ultimate value or reason\n * @param {function} inspect function that returns a snapshot of the\n *  returned near promise's state\n * @returns {Promise}\n */\nfunction near(proxy, inspect) {\n        return new Promise(function (type, args, resolve) {\n                try {\n                        resolve(proxy[type].apply(proxy, args));\n                } catch (e) {\n                        resolve(rejected(e));\n                }\n        }, inspect);\n}\n\n/**\n * Create a progress promise with the supplied update.\n * @private\n * @param {*} update\n * @return {Promise} progress promise\n */\nfunction progressed(update) {\n        return new Promise(function (type, args, _, notify) {\n                var onProgress = args[2];\n                try {\n                        notify(typeof onProgress === 'function' ? onProgress(update) : update);\n                } catch (e) {\n                        notify(e);\n                }\n        });\n}\n\n/**\n * Coerces x to a trusted Promise\n * @param {*} x thing to coerce\n * @returns {*} Guaranteed to return a trusted Promise.  If x\n *   is trusted, returns x, otherwise, returns a new, trusted, already-resolved\n *   Promise whose resolution value is:\n *   * the resolution value of x if it's a foreign promise, or\n *   * x if it's a value\n */\nfunction coerce(self, x) {\n        if (x === self) {\n                return rejected(new TypeError());\n        }\n\n        if (x instanceof Promise) {\n                return x;\n        }\n\n        try {\n                var untrustedThen = x === Object(x) && x.then;\n\n                return typeof untrustedThen === 'function' ? assimilate(untrustedThen, x) : fulfilled(x);\n        } catch (e) {\n                return rejected(e);\n        }\n}\n\n/**\n * Safely assimilates a foreign thenable by wrapping it in a trusted promise\n * @param {function} untrustedThen x's then() method\n * @param {object|function} x thenable\n * @returns {Promise}\n */\nfunction assimilate(untrustedThen, x) {\n        return promise(function (resolve, reject) {\n                fcall(untrustedThen, x, resolve, reject);\n        });\n}\n\n/**\n * Proxy for a near, fulfilled value\n * @param {*} value\n * @constructor\n */\nfunction NearFulfilledProxy(value) {\n        this.value = value;\n}\n\nNearFulfilledProxy.prototype.when = function (onResult) {\n        return typeof onResult === 'function' ? onResult(this.value) : this.value;\n};\n\n/**\n * Proxy for a near rejection\n * @param {*} reason\n * @constructor\n */\nfunction NearRejectedProxy(reason) {\n        this.reason = reason;\n}\n\nNearRejectedProxy.prototype.when = function (_, onError) {\n        if (typeof onError === 'function') {\n                return onError(this.reason);\n        } else {\n                throw this.reason;\n        }\n};\n\nfunction updateStatus(value, status) {\n        value.then(statusFulfilled, statusRejected);\n\n        function statusFulfilled() {\n                status.fulfilled();\n        }\n        function statusRejected(r) {\n                status.rejected(r);\n        }\n}\n\n/**\n * Determines if x is promise-like, i.e. a thenable object\n * NOTE: Will return true for *any thenable object*, and isn't truly\n * safe, since it may attempt to access the `then` property of x (i.e.\n *  clever/malicious getters may do weird things)\n * @param {*} x anything\n * @returns {boolean} true if x is promise-like\n */\nfunction isPromiseLike(x) {\n        return x && typeof x.then === 'function';\n}\n\n/**\n * Initiates a competitive race, returning a promise that will resolve when\n * howMany of the supplied promisesOrValues have resolved, or will reject when\n * it becomes impossible for howMany to resolve, for example, when\n * (promisesOrValues.length - howMany) + 1 input promises reject.\n *\n * @param {Array} promisesOrValues array of anything, may contain a mix\n *      of promises and values\n * @param howMany {number} number of promisesOrValues to resolve\n * @param {function?} [onFulfilled] DEPRECATED, use returnedPromise.then()\n * @param {function?} [onRejected] DEPRECATED, use returnedPromise.then()\n * @param {function?} [onProgress] DEPRECATED, use returnedPromise.then()\n * @returns {Promise} promise that will resolve to an array of howMany values that\n *  resolved first, or will reject with an array of\n *  (promisesOrValues.length - howMany) + 1 rejection reasons.\n */\nfunction some(promisesOrValues, howMany, onFulfilled, onRejected, onProgress) {\n\n        return when(promisesOrValues, function (promisesOrValues) {\n\n                return promise(resolveSome).then(onFulfilled, onRejected, onProgress);\n\n                function resolveSome(resolve, reject, notify) {\n                        var toResolve, toReject, values, reasons, fulfillOne, rejectOne, len, i;\n\n                        len = promisesOrValues.length >>> 0;\n\n                        toResolve = Math.max(0, Math.min(howMany, len));\n                        values = [];\n\n                        toReject = len - toResolve + 1;\n                        reasons = [];\n\n                        // No items in the input, resolve immediately\n                        if (!toResolve) {\n                                resolve(values);\n                        } else {\n                                rejectOne = function (reason) {\n                                        reasons.push(reason);\n                                        if (! --toReject) {\n                                                fulfillOne = rejectOne = identity;\n                                                reject(reasons);\n                                        }\n                                };\n\n                                fulfillOne = function (val) {\n                                        // This orders the values based on promise resolution order\n                                        values.push(val);\n                                        if (! --toResolve) {\n                                                fulfillOne = rejectOne = identity;\n                                                resolve(values);\n                                        }\n                                };\n\n                                for (i = 0; i < len; ++i) {\n                                        if (i in promisesOrValues) {\n                                                when(promisesOrValues[i], fulfiller, rejecter, notify);\n                                        }\n                                }\n                        }\n\n                        function rejecter(reason) {\n                                rejectOne(reason);\n                        }\n\n                        function fulfiller(val) {\n                                fulfillOne(val);\n                        }\n                }\n        });\n}\n\n/**\n * Initiates a competitive race, returning a promise that will resolve when\n * any one of the supplied promisesOrValues has resolved or will reject when\n * *all* promisesOrValues have rejected.\n *\n * @param {Array|Promise} promisesOrValues array of anything, may contain a mix\n *      of {@link Promise}s and values\n * @param {function?} [onFulfilled] DEPRECATED, use returnedPromise.then()\n * @param {function?} [onRejected] DEPRECATED, use returnedPromise.then()\n * @param {function?} [onProgress] DEPRECATED, use returnedPromise.then()\n * @returns {Promise} promise that will resolve to the value that resolved first, or\n * will reject with an array of all rejected inputs.\n */\nfunction any(promisesOrValues, onFulfilled, onRejected, onProgress) {\n\n        function unwrapSingleResult(val) {\n                return onFulfilled ? onFulfilled(val[0]) : val[0];\n        }\n\n        return some(promisesOrValues, 1, unwrapSingleResult, onRejected, onProgress);\n}\n\n/**\n * Return a promise that will resolve only once all the supplied promisesOrValues\n * have resolved. The resolution value of the returned promise will be an array\n * containing the resolution values of each of the promisesOrValues.\n * @memberOf when\n *\n * @param {Array|Promise} promisesOrValues array of anything, may contain a mix\n *      of {@link Promise}s and values\n * @param {function?} [onFulfilled] DEPRECATED, use returnedPromise.then()\n * @param {function?} [onRejected] DEPRECATED, use returnedPromise.then()\n * @param {function?} [onProgress] DEPRECATED, use returnedPromise.then()\n * @returns {Promise}\n */\nfunction all(promisesOrValues, onFulfilled, onRejected, onProgress) {\n        return _map(promisesOrValues, identity).then(onFulfilled, onRejected, onProgress);\n}\n\n/**\n * Joins multiple promises into a single returned promise.\n * @return {Promise} a promise that will fulfill when *all* the input promises\n * have fulfilled, or will reject when *any one* of the input promises rejects.\n */\nfunction join() /* ...promises */{\n        return _map(arguments, identity);\n}\n\n/**\n * Settles all input promises such that they are guaranteed not to\n * be pending once the returned promise fulfills. The returned promise\n * will always fulfill, except in the case where `array` is a promise\n * that rejects.\n * @param {Array|Promise} array or promise for array of promises to settle\n * @returns {Promise} promise that always fulfills with an array of\n *  outcome snapshots for each input promise.\n */\nfunction settle(array) {\n        return _map(array, toFulfilledState, toRejectedState);\n}\n\n/**\n * Promise-aware array map function, similar to `Array.prototype.map()`,\n * but input array may contain promises or values.\n * @param {Array|Promise} array array of anything, may contain promises and values\n * @param {function} mapFunc map function which may return a promise or value\n * @returns {Promise} promise that will fulfill with an array of mapped values\n *  or reject if any input promise rejects.\n */\nfunction map(array, mapFunc) {\n        return _map(array, mapFunc);\n}\n\n/**\n * Internal map that allows a fallback to handle rejections\n * @param {Array|Promise} array array of anything, may contain promises and values\n * @param {function} mapFunc map function which may return a promise or value\n * @param {function?} fallback function to handle rejected promises\n * @returns {Promise} promise that will fulfill with an array of mapped values\n *  or reject if any input promise rejects.\n */\nfunction _map(array, mapFunc, fallback) {\n        return when(array, function (array) {\n\n                return _promise(resolveMap);\n\n                function resolveMap(resolve, reject, notify) {\n                        var results, len, toResolve, i;\n\n                        // Since we know the resulting length, we can preallocate the results\n                        // array to avoid array expansions.\n                        toResolve = len = array.length >>> 0;\n                        results = [];\n\n                        if (!toResolve) {\n                                resolve(results);\n                                return;\n                        }\n\n                        // Since mapFunc may be async, get all invocations of it into flight\n                        for (i = 0; i < len; i++) {\n                                if (i in array) {\n                                        resolveOne(array[i], i);\n                                } else {\n                                        --toResolve;\n                                }\n                        }\n\n                        function resolveOne(item, i) {\n                                when(item, mapFunc, fallback).then(function (mapped) {\n                                        results[i] = mapped;\n\n                                        if (! --toResolve) {\n                                                resolve(results);\n                                        }\n                                }, reject, notify);\n                        }\n                }\n        });\n}\n\n/**\n * Traditional reduce function, similar to `Array.prototype.reduce()`, but\n * input may contain promises and/or values, and reduceFunc\n * may return either a value or a promise, *and* initialValue may\n * be a promise for the starting value.\n *\n * @param {Array|Promise} promise array or promise for an array of anything,\n *      may contain a mix of promises and values.\n * @param {function} reduceFunc reduce function reduce(currentValue, nextValue, index, total),\n *      where total is the total number of items being reduced, and will be the same\n *      in each call to reduceFunc.\n * @returns {Promise} that will resolve to the final reduced value\n */\nfunction reduce(promise, reduceFunc /*, initialValue */) {\n        var args = fcall(slice, arguments, 1);\n\n        return when(promise, function (array) {\n                var total;\n\n                total = array.length;\n\n                // Wrap the supplied reduceFunc with one that handles promises and then\n                // delegates to the supplied.\n                args[0] = function (current, val, i) {\n                        return when(current, function (c) {\n                                return when(val, function (value) {\n                                        return reduceFunc(c, value, i, total);\n                                });\n                        });\n                };\n\n                return reduceArray.apply(array, args);\n        });\n}\n\n// Snapshot states\n\n/**\n * Creates a fulfilled state snapshot\n * @private\n * @param {*} x any value\n * @returns {{state:'fulfilled',value:*}}\n */\nfunction toFulfilledState(x) {\n        return { state: 'fulfilled', value: x };\n}\n\n/**\n * Creates a rejected state snapshot\n * @private\n * @param {*} x any reason\n * @returns {{state:'rejected',reason:*}}\n */\nfunction toRejectedState(x) {\n        return { state: 'rejected', reason: x };\n}\n\n/**\n * Creates a pending state snapshot\n * @private\n * @returns {{state:'pending'}}\n */\nfunction toPendingState() {\n        return { state: 'pending' };\n}\n\n//\n// Internals, utilities, etc.\n//\n\nvar reduceArray, slice, fcall, nextTick, handlerQueue, setTimeout, funcProto, call, arrayProto, monitorApi, cjsRequire, MutationObserver, undef;\n\n// cjsRequire = require;\n\n//\n// Shared handler queue processing\n//\n// Credit to Twisol (https://github.com/Twisol) for suggesting\n// this type of extensible queue + trampoline approach for\n// next-tick conflation.\n\nhandlerQueue = [];\n\n/**\n * Enqueue a task. If the queue is not currently scheduled to be\n * drained, schedule it.\n * @param {function} task\n */\nfunction enqueue(task) {\n        if (handlerQueue.push(task) === 1) {\n                nextTick(drainQueue);\n        }\n}\n\n/**\n * Drain the handler queue entirely, being careful to allow the\n * queue to be extended while it is being processed, and to continue\n * processing until it is truly empty.\n */\nfunction drainQueue() {\n        runHandlers(handlerQueue);\n        handlerQueue = [];\n}\n\n// capture setTimeout to avoid being caught by fake timers\n// used in time based tests\nsetTimeout = global.setTimeout;\n\n// Allow attaching the monitor to when() if env has no console\nmonitorApi = typeof console != 'undefined' ? console : when;\n\n// Sniff \"best\" async scheduling option\n// Prefer process.nextTick or MutationObserver, then check for\n// vertx and finally fall back to setTimeout\n/*global process*/\nif (typeof process === 'object' && process.nextTick) {\n        nextTick = process.nextTick;\n} else if (MutationObserver = global.MutationObserver || global.WebKitMutationObserver) {\n        nextTick = function (document, MutationObserver, drainQueue) {\n                var el = document.createElement('div');\n                new MutationObserver(drainQueue).observe(el, { attributes: true });\n\n                return function () {\n                        el.setAttribute('x', 'x');\n                };\n        }(document, MutationObserver, drainQueue);\n} else {\n        // try {\n        //         // vert.x 1.x || 2.x\n        //         nextTick = cjsRequire('vertx').runOnLoop || cjsRequire('vertx').runOnContext;\n        // } catch(ignore) {\n        nextTick = function (t) {\n                setTimeout(t, 0);\n        };\n        // }\n}\n\n//\n// Capture/polyfill function and array utils\n//\n\n// Safe function calls\nfuncProto = Function.prototype;\ncall = funcProto.call;\nfcall = funcProto.bind ? call.bind(call) : function (f, context) {\n        return f.apply(context, slice.call(arguments, 2));\n};\n\n// Safe array ops\narrayProto = [];\nslice = arrayProto.slice;\n\n// ES5 reduce implementation if native not available\n// See: http://es5.github.com/#x15.4.4.21 as there are many\n// specifics and edge cases.  ES5 dictates that reduce.length === 1\n// This implementation deviates from ES5 spec in the following ways:\n// 1. It does not check if reduceFunc is a Callable\nreduceArray = arrayProto.reduce || function (reduceFunc /*, initialValue */) {\n        /*jshint maxcomplexity: 7*/\n        var arr, args, reduced, len, i;\n\n        i = 0;\n        arr = Object(this);\n        len = arr.length >>> 0;\n        args = arguments;\n\n        // If no initialValue, use first item of array (we know length !== 0 here)\n        // and adjust i to start at second item\n        if (args.length <= 1) {\n                // Skip to the first real element in the array\n                for (;;) {\n                        if (i in arr) {\n                                reduced = arr[i++];\n                                break;\n                        }\n\n                        // If we reached the end of the array without finding any real\n                        // elements, it's a TypeError\n                        if (++i >= len) {\n                                throw new TypeError();\n                        }\n                }\n        } else {\n                // If initialValue provided, use it\n                reduced = args[1];\n        }\n\n        // Do the actual reduce\n        for (; i < len; ++i) {\n                if (i in arr) {\n                        reduced = reduceFunc(reduced, arr[i], i, arr);\n                }\n        }\n\n        return reduced;\n};\n\nfunction identity(x) {\n        return x;\n}\n\nmodule.exports = when;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../node_modules/.npminstall/process/0.11.10/process/browser.js */ \"./node_modules/.npminstall/process/0.11.10/process/browser.js\")))\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/js/lib/util/when.js?");

/***/ }),

/***/ "./branches/cloud-collect/common/js/plugin/dialog/frameDialogManager.js":
/*!******************************************************************************!*\
  !*** ./branches/cloud-collect/common/js/plugin/dialog/frameDialogManager.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * iframe中可以引用本模块，然后获取父窗口的弹层\n * 注意：不管在哪，引用本模块都没有问题！\n */\n\nvar manager = {\n    getDialog: function (id) {\n        if (top.dialogManager) {\n            return top.dialogManager.getDialog(id);\n        } else {\n            return null;\n        }\n    },\n    getPop: function (id) {\n        if (top.dialogManager) {\n            return top.dialogManager.getPop(id);\n        } else {\n            return null;\n        }\n    },\n    /**\n     * 弹出警告窗\n     * @param  {[type]} text       显示的信息\n     * @param  {[type]} onOkOrOpts 如果是函数，则是当点击确定的时候的回调。如果是对象，则是配置信息\n     * @return {[type]}            弹层对象\n     */\n    alert: function (text, onOkOrOpts) {\n        return top.dialogManager.alert(text, onOkOrOpts);\n    },\n    /**\n     * 弹出警告窗\n     * @param  {[type]} text       显示的信息\n     * @param  {[type]} onOkOrOpts 如果是函数，则是当点击确定的时候的回调。如果是对象，则是配置信息\n     * @param  {[type]} onCancel   如果onOKOrOpts是函数，则允许这里传入函数作为点击取消时的回调，如果onOKOrOpts为对象，则该参数失效\n     * @return {[type]}            弹层对象\n     */\n    confirm: function (text, onOkOrOpts, onCancel) {\n        return top.dialogManager.confirm(text, onOkOrOpts, onCancel);\n    },\n    /**\n     * 弹出等待框\n     */\n    wait: function () {\n        return top.dialogManager.wait();\n    },\n    /**\n     * 关闭等待框\n     */\n    closeWait: function () {\n        return top.dialogManager.closeWait();\n    },\n    toast: function (msg) {\n        return top.dialogManager.toast(msg);\n    },\n    bind: function (key, fn) {\n        top.pageService.bind(key, fn);\n    },\n    unbind: function (key, fn) {\n        top.pageService.unbind(key, fn);\n    },\n    fire: function (key, data) {\n        top.pageService.fire(key, data);\n    },\n    reload: function (url) {\n        top.framesManager.reload(url);\n    },\n    createScript: function (url) {\n        top.framesManager.createScript(url);\n    }\n};\n\nmodule.exports = manager;\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/js/plugin/dialog/frameDialogManager.js?");

/***/ }),

/***/ "./branches/cloud-collect/common/js/plugin/runtime.js":
/*!************************************************************!*\
  !*** ./branches/cloud-collect/common/js/plugin/runtime.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * 存储了一些运行时数据或者方法\n */\nvar console = __webpack_require__(/*! lib/io/console */ \"./branches/cloud-collect/common/js/lib/io/console.js\");\nvar when = __webpack_require__(/*! lib/util/when */ \"./branches/cloud-collect/common/js/lib/util/when.js\");\nvar ajax = __webpack_require__(/*! lib/io/ajax */ \"./branches/cloud-collect/common/js/lib/io/ajax.js\");\nvar URL = __webpack_require__(/*! lib/util/URL */ \"./branches/cloud-collect/common/js/lib/util/URL.js\");\nvar dialogManager = __webpack_require__(/*! plugin/dialog/frameDialogManager */ \"./branches/cloud-collect/common/js/plugin/dialog/frameDialogManager.js\");\nvar storage = __webpack_require__(/*! vlib/util/storage */ \"./branches/cloud-collect/common/vue-js/vlib/util/storage.js\").default;\nvar api = __webpack_require__(/*! vs/api */ \"./branches/cloud-collect/common/vue-js/api/index.js\").default;\nvar that = {};\nvar moduleName = null;\nvar moduleId = null;\nvar path = null;\nvar authority = null;\nvar moduleJSON = null;\n\n(function () {\n    var url = URL.parse(URL.parse(location.href).hash);\n    if (url.path === \"/proxy.html\") {\n        url.path = storage.get(\"hash.url\") || url.path;\n    }\n    path = url.path.substr(url.path.charAt(0) == \"/\" ? 1 : 0);\n    var array = path.split(\"/\");\n    moduleName = array[0];\n    path = \"/\" + array.slice(1).join(\"/\");\n    moduleId = url.queryJson[\"appid\"];\n    storage.put(api.const.APPID, moduleId);\n})();\n\n/**\n * 获取模块名，仅用于proxy页面调用\n */\nthat.getModuleName = function () {\n    return moduleName;\n};\n\n/*\n*获取环境\n */\nthat.getDev = function () {\n    var cls = document.body.className;\n    if (cls.indexOf('cloud-zy') > -1) {\n        return 'cfc';\n    } else if (cls.indexOf('cloud-ng') > -1) {\n        return 'ng';\n    } else if (cls.indexOf('cloud-let') > -1) {\n        return 'let';\n    } else if (cls.indexOf('cloud-xflh') > -1) {\n        return 'xflh';\n    } else if (cls.indexOf('cloud-freely') > -1) {\n        return 'freely';\n    } else if (cls.indexOf('cloud-hq') > -1) {\n        return 'hq';\n    } else if (cls.indexOf('cloud-my') > -1) {\n        return 'my';\n    }\n    return '';\n};\n\n/**\n * 获取路径名，不包含模块名，仅用于proxy页调用\n */\nthat.getPath = function () {\n    return path;\n};\n\n/**\n * 获取appid，仅用于proxy页调用\n */\nthat.getModuleId = function () {\n    return moduleId;\n};\n\n/*****\n * 获取authority权限\n */\nthat.getAuthority = function () {\n    return authority;\n};\n\n/*******\n * 获取通用按钮名称\n */\nthat.getLanguage = function () {\n    return {\n        look: \"查看\",\n        add: \"新增\",\n        edit: \"编辑\",\n        del: \"删除\"\n    };\n};\n\n/**\n * 获取当前用户信息，如果不存在则返回null\n */\nthat.getUser = function () {\n    if (localStorage.getItem(\"user\")) {\n        try {\n            return JSON.parse(localStorage.getItem(\"user\"));\n        } catch (ex) {\n            console.error(\"localStorage中存储的user信息有问题\");\n            return null;\n        }\n    } else {\n        return null;\n    }\n};\n\n/**\n * 设置当前用户，如果传入参数为空则是退出登录\n */\nthat.setUser = function (user) {\n    if (user == null) {\n        localStorage.removeItem(\"user\");\n    } else {\n        storage.put(api.const.USER, user);\n        localStorage.setItem(\"user\", JSON.stringify(user));\n    }\n};\n\n/**\n * 获取当前影院，如果不存在则返回null\n */\nthat.getCinemaInfo = function () {\n    if (localStorage.getItem(\"default.cinema\")) {\n        try {\n            return JSON.parse(localStorage.getItem(\"default.cinema\"));\n        } catch (ex) {\n            console.error(\"localStorage中存储的cinema信息有问题\");\n            return null;\n        }\n    } else {\n        return null;\n    }\n};\n\n/**\n * 设置当前用户，如果传入参数为空则是退出登录\n */\nthat.setCinemaInfo = function (cinema) {\n    if (cinema === null) {\n        localStorage.removeItem(\"default.cinema\");\n    } else {\n        localStorage.setItem(\"default.cinema\", JSON.stringify(cinema));\n    }\n};\n\n/**\n * 用于获取网络异常时的统一提示信息\n * @param  {XMLHttpRequest} req xmlhttp对象\n */\nthat.getHttpErrorMessage = function (req) {\n    return \"网络异常，请重新尝试(\" + req.status + \")\";\n};\n\n/**\n * 用于获取当前页的权限数据\n * 自动从location.href中取\n * 注：支持promise(when.js)\n */\nthat.authenticate = function () {\n    var defer = when.defer();\n    ajax({\n        \"url\": \"/proxy/cloud/platform/authenticate\",\n        \"method\": \"get\",\n        \"data\": {\n            appid: moduleId,\n            uri: \"/\" + moduleName + path\n        },\n        \"onSuccess\": function (res) {\n            if (res.code == 0) {\n                authority = res.data;\n                defer.resolve();\n            } else {\n                dialogManager.alert(\"没有权限访问此页面！\");\n            }\n        },\n        \"onError\": function (req) {\n            if (req.status == \"401\") {\n                dialogManager.alert(\"请先登录！\", function () {\n                    top.location.href = \"/login.html\";\n                });\n            } else if (req.status == \"403\") {\n                dialogManager.alert(\"没有权限访问此页面！\");\n            }\n            // TODO 将本页权限数据保存到一个变量中，然后that提供个api用来做验证\n        }\n    });\n    return defer.promise;\n};\n\nthat.childModule = function () {\n    var defer = when.defer();\n    if (moduleJSON !== null) {\n        defer.resolve(moduleJSON);\n    } else {\n        ajax({\n            \"url\": \"/common/config/module.json?ver=\" + new Date().getTime(),\n            \"method\": \"get\",\n            \"onSuccess\": function (res) {\n                moduleJSON = res;\n                defer.resolve(res);\n            },\n            \"onError\": function (req) {\n                defer.reject(req);\n            }\n        });\n    }\n    return defer.promise;\n};\n\n/********\n * 用于获取子模块配置数据\n */\n\n/**\n * 页面加载失败时统一调用，后边应该改成刷新当页\n */\nthat.pageRenderError = function (msg) {\n    // 可能会需要在这里处理刷新页面\n    console.error(msg);\n};\n\nmodule.exports = that;\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/js/plugin/runtime.js?");

/***/ }),

/***/ "./branches/cloud-collect/common/js/plugin/theme/main.js":
/*!***************************************************************!*\
  !*** ./branches/cloud-collect/common/js/plugin/theme/main.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/***********\r\n * 皮肤管理集合\r\n * by: 璩\r\n */\n(function (href) {\n    var themeUtils = {\n        skin: \"cloud-let\",\n        path: \"./login/dist/\",\n        pathMap: {\n            '203.195.128.135:8288': 'cloud-let', //兜有云生产\n            'fcloud.mopon.cn:8288': 'cloud-let', //兜有云生产\n            '172.16.10.38': 'cloud-let', //兜有准生产\n            '172.16.10.55:41': 'cloud-let', //兜有云测试\n            'cloud.cfc.com.cn': 'cloud-zy', //中影云生产\n            '172.16.10.55:40': 'cloud-zy', //中影云测试\n            'cloud.omnijoi.cn': 'cloud-xflh', //福泰云生产\n            'ftypre.omnijoi.cn': 'cloud-xflh', //福泰准生产\n            '172.16.10.55:61': 'cloud-xflh' //福泰云测试\n        },\n        setSkin: function () {\n            var obj = this.getParse(href);\n            if (this.pathMap[obj.host]) {\n                this.skin = this.pathMap[obj.host];\n            }\n        },\n        createScript: function (url) {\n            var script = document.createElement(\"script\");\n            script.type = \"text/javascript\";\n            script.src = this.path + url + this.timestamp();\n            document.getElementsByTagName(\"head\")[0].appendChild(script);\n        },\n        getParse: function (url) {\n            var link = document.createElement(\"A\");\n            link.href = url;\n\n            return {\n                \"url\": url,\n                \"scheme\": link.protocol,\n                \"host\": link.host,\n                \"port\": link.port,\n                \"path\": link.pathname\n            };\n        },\n        includes: function (code) {\n            return href.indexOf(code) > -1;\n        },\n        timestamp: function () {\n            return \"?ver=\" + new Date().getTime();\n        },\n        config: {\n            login: {\n                \"cloud-zy\": \"login.js\",\n                \"cloud-ng\": \"cloudng/login.js\",\n                \"cloud-let\": \"cloudlet/login.js\",\n                \"cloud-xflh\": \"xflhLogin/login.js\",\n                \"cloud-freely\": \"cloudfreely/login.js\",\n                \"cloud-hq\": \"cloudhq/login.js\",\n                \"cloud-my\": \"cloudmy/login.js\"\n            },\n            nav: {\n                \"cloud-zy\": \"nav.js\",\n                \"cloud-ng\": \"cloudng/nav.js\",\n                \"cloud-let\": \"cloudlet/nav.js\",\n                \"cloud-xflh\": \"xflhLogin/nav.js\",\n                \"cloud-freely\": \"cloudfreely/nav.js\",\n                \"cloud-hq\": \"cloudhq/nav.js\",\n                \"cloud-my\": \"cloudmy/nav.js\"\n            }\n        },\n        init: function () {\n            this.setSkin();\n            document.body.className = this.skin;\n            if (this.includes(\"login.html\") || !this.includes(\".html\")) {\n                this.createScript(this.config.login[this.skin]);\n            } else if (this.includes(\"nav.html\")) {\n                this.createScript(this.config.nav[this.skin]);\n            } else if (this.includes(\"frame.html\")) {} else if (this.includes(\"proxy.html\")) {}\n        }\n    };\n    themeUtils.init();\n    module.exports = themeUtils.skin;\n})(window.location.href);\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/js/plugin/theme/main.js?");

/***/ }),

/***/ "./branches/cloud-collect/common/proxy/main.js":
/*!*****************************************************!*\
  !*** ./branches/cloud-collect/common/proxy/main.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * @author benny.zheng\n * @data 2016-07-19\n * @description 代理各个页面的加载\n */\n//----------------require--------------\nvar runtime = __webpack_require__(/*! plugin/runtime */ \"./branches/cloud-collect/common/js/plugin/runtime.js\");\nvar theme = __webpack_require__(/*! plugin/theme/main */ \"./branches/cloud-collect/common/js/plugin/theme/main.js\");\nvar script = document.createElement(\"script\");\n\nscript.charset = \"utf-8\";\nscript.type = \"text/javascript\";\nscript.src = \"./\" + runtime.getModuleName() + \"/dist\" + runtime.getPath() + \".js?ver=\" + new Date().getTime();\ndocument.body.appendChild(script);\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/proxy/main.js?");

/***/ }),

/***/ "./branches/cloud-collect/common/vue-js/api/index.js":
/*!***********************************************************!*\
  !*** ./branches/cloud-collect/common/vue-js/api/index.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    authenticate: \"/proxy/cloud/platform/authenticate\",\n    const: {\n        MENUID: \"menu.id.session\",\n        APPID: \"menu.appid.session\",\n        USER: \"menu.user.session\"\n    }\n});\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/vue-js/api/index.js?");

/***/ }),

/***/ "./branches/cloud-collect/common/vue-js/vlib/util/storage.js":
/*!*******************************************************************!*\
  !*** ./branches/cloud-collect/common/vue-js/vlib/util/storage.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var lib_util_dataType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/util/dataType */ \"./branches/cloud-collect/common/js/lib/util/dataType.js\");\n/* harmony import */ var lib_util_dataType__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lib_util_dataType__WEBPACK_IMPORTED_MODULE_0__);\n/**\r\n * Created by TIAN on 2017/10/12.\r\n * sessionStorage 存储\r\n */\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    put(key, val) {\n        window.sessionStorage.setItem(key, Object(lib_util_dataType__WEBPACK_IMPORTED_MODULE_0__[\"isObject\"])(val) || Object(lib_util_dataType__WEBPACK_IMPORTED_MODULE_0__[\"isArray\"])(val) ? `{\"_OBJECT_ARRAY_\": ${JSON.stringify(val)}}` : val);\n    },\n    get(key) {\n        const result = window.sessionStorage.getItem(key);\n        return Object(lib_util_dataType__WEBPACK_IMPORTED_MODULE_0__[\"isString\"])(result) && result.includes(\"_OBJECT_ARRAY_\") ? JSON.parse(result)[\"_OBJECT_ARRAY_\"] : result;\n    },\n    clear(key) {\n        if (Object(lib_util_dataType__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(key)) {\n            window.sessionStorage.clear();\n        } else {\n            window.sessionStorage.removeItem(key);\n        }\n    }\n});\n\n//# sourceURL=webpack:///./branches/cloud-collect/common/vue-js/vlib/util/storage.js?");

/***/ }),

/***/ "./node_modules/.npminstall/process/0.11.10/process/browser.js":
/*!*********************************************************************!*\
  !*** ./node_modules/.npminstall/process/0.11.10/process/browser.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///./node_modules/.npminstall/process/0.11.10/process/browser.js?");

/***/ })

/******/ });